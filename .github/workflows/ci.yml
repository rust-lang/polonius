name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  rustfmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install rust beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          profile: minimal
          override: true
          components: rustfmt

      - name: Check formatting of all crates
        run: cargo fmt --all -- --check

  book:
    name: Build and upload book
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install mdbook
        run: |
          mkdir mdbook
          curl -Lf https://github.com/rust-lang/mdBook/releases/download/v0.4.8/mdbook-v0.4.8-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=./mdbook
          echo "$GITHUB_WORKSPACE/mdbook" >> $GITHUB_PATH

      - name: Build book
        run: mdbook build ./book/

      - name: Upload book
        uses: actions/upload-pages-artifact@v3
        with:
          path: book/book
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository_owner == 'rust-lang'

  # Deploy is run as a separate job as it needs elevated permissions
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: book  # the `book` job uploads the pages artifact
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository_owner == 'rust-lang'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment

  test:
    name: Run tests
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    strategy:
      matrix:
        rust: [beta, nightly]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Build polonius
        run: cargo build

      - name: Execute tests for all crates in the workspace
        run: cargo test --all
